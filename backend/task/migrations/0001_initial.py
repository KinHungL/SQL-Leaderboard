# Generated by Django 4.0.3 on 2022-03-20 18:23

from django.db import migrations, models
import django.db.models.deletion
import task.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('competition', '0001_initial'),
        ('competitor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('error', 'Error')], default='pending', max_length=32)),
                ('sql', models.FileField(null=True, upload_to=task.models.get_task_path)),
                ('result', models.TextField(null=True)),
                ('start_time', models.DateTimeField(auto_now=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('previous_task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='task.task')),
            ],
        ),
        migrations.CreateModel(
            name='SetupTask',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='task.task')),
                ('setup_type', models.CharField(choices=[('private create', 'Private Create'), ('public create', 'Public Create'), ('private query', 'Private Query'), ('public query', 'Public Query')], max_length=32)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.competition')),
            ],
            bases=('task.task',),
        ),
        migrations.CreateModel(
            name='QueryTask',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='task.task')),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitor.competitor')),
            ],
            bases=('task.task',),
        ),
    ]
